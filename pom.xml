<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.swagger</groupId>
	<artifactId>swagger-jaxrs-server</artifactId>
	<packaging>jar</packaging>
	<name>swagger-jaxrs-server</name>
	<version>1.0.0</version>
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources/config</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<!-- Used to generate properties file -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<id>read-project-properties</id>
						<phase>validate</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>src/main/resources/etc/orcid.properties</file>
							</files>
						</configuration>
					</execution>
					<execution>
						<id>write-project-properties</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>
								${project.build.outputDirectory}/gen.properties
							</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>set-system-properties</id>
						<phase>initialization</phase>
						<goals>
							<goal>set-system-properties</goal>
						</goals>
						<configuration>
							<properties>
								<property>
									<name>logback.log.file</name>
									<value>${logback.log.file}</value>
								</property>
							</properties>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty-version}</version>
				<configuration>
					<webApp>
						<contextPath>/</contextPath>
					</webApp>
					<webAppSourceDirectory>target/${project.artifactId}-${project.version}</webAppSourceDirectory>
					<stopPort>${server.jetty.stop_port}</stopPort>
					<stopKey>stopit</stopKey>
					<stopWait>10</stopWait>
					<httpConnector>
						<port>${server.jetty.port}</port>
						<idleTimeout>60000</idleTimeout>
					</httpConnector>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/gen/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Used to pull XSD files from the JAR -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>unpack-xsd-files</id>
						<!-- Using the initialize phase because it is before the generate sources 
							phase -->
						<phase>compile</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<!-- Artifact that Holds our custom templates -->
									<groupId>org.um.dsi.gavea</groupId>
									<artifactId>degois-orcid-client</artifactId>
									<version>${orcid-api-client.version}</version>
									<type>jar</type>
								</artifactItem>
							</artifactItems>
							<includes>**/*.xsd</includes>
							<outputDirectory>${project.build.directory}/xsd-includes</outputDirectory>
						</configuration>
					</execution>
					<!-- execution> <id>unpack-static-orcid-files</id> <phase>generate-resources</phase> 
						<goals> <goal>unpack</goal> </goals> <configuration> <artifactItems> <artifactItem> 
						<groupId>pt.ptcris</groupId> <artifactId>swagger-ui-ext</artifactId> <version>${swagger-core-version}</version> 
						<type>jar</type> <includes>static/swagger/**</includes> <excludes>static/swagger/*.html</excludes> 
						<outputDirectory>${project.build.outputDirectory}</outputDirectory> </artifactItem> 
						</artifactItems> </configuration> </execution -->
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-map</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/map</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey2-jaxrs</artifactId>
			<scope>compile</scope>
			<version>${swagger-core-version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>${jersey2-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey2-version}</version>
		</dependency>
		<!-- Base64 encoding that works in both JVM and Android -->
		<dependency>
			<groupId>com.brsanthu</groupId>
			<artifactId>migbase64</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>1.3.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.gearman/gearman-java -->
		<dependency>
			<groupId>org.gearman</groupId>
			<artifactId>gearman-java</artifactId>
			<version>0.6</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.unix4j</groupId>
			<artifactId>unix4j-command</artifactId>
			<version>0.4</version>
		</dependency>


		<!-- Internal dependencies -->
		<dependency>
			<groupId>pt.ptcris</groupId>
			<artifactId>ptcrisync</artifactId>
			<version>0.0.1</version>
		</dependency>
		<!--dependency> <groupId>pt.ptcris</groupId> <artifactId>swagger-ui-ext</artifactId> 
			<scope>compile</scope> <version>${swagger-core-version}</version> </dependency -->
	</dependencies>
	<repositories>
		<repository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<properties>
		<java.version>1.7</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<swagger-core-version>1.5.10</swagger-core-version>
		<jetty-version>9.2.9.v20150224</jetty-version>
		<jersey2-version>2.22.2</jersey2-version>
		<junit-version>4.12</junit-version>
		<logback-version>1.1.7</logback-version>
		<servlet-api-version>2.5</servlet-api-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<application.name>${project.name}</application.name>
		<application.version>${project.version}</application.version>
		<orcid-api-client.version>2.0-1-SNAPSHOT</orcid-api-client.version>
		<logback.log.file>${project.basedir}/log/sync.log</logback.log.file>
		<custom.schema.file>${project.build.outputDirectory}/work-schema-validation.xsd</custom.schema.file>
		<work.schema.file>${project.build.directory}/xsd-includes/xsd/record_2.0/work-2.0.xsd</work.schema.file>
		<server.jetty.port>8080</server.jetty.port>
		<server.jetty.stop_port>8079</server.jetty.stop_port>
	</properties>
</project>
